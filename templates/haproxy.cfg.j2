global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

{% for frontend in haproxy_frontends %}
frontend  {{ frontend.name }}
    bind {{ frontend.ip|default('*') }}:{{ frontend.port|default(haproxy_frontend_port) }}{% if frontend.ssl_certificate is defined %} ssl{% if frontend.ssl_certificate is mapping %}{% for cert in frontend.ssl_certificate %} crt {{ cert }}{% endfor %}{% endif %}{% if frontend.ssl_certificate is not mapping %} crt {{ frontend.ssl_certificate }}{% endif %} ciphers {{ frontend.ssl_ciphers|default(haproxy_default_ciphers) }}{% endif %}
{% if frontend.vhosts is defined %}

{% for vhost in frontend.vhosts %}
    acl {{ vhost.backend }} hdr(host) -i {{ vhost.host }}
    use_backend {{ vhost.backend }} if {{ vhost.backend }}
{% endfor %}
{% endif %}

{% if frontend.default_backend is defined %}
    default_backend {{ frontend.default_backend }}
{% endif %}
{% if frontend.tcp_mode is defined %}
{% if frontend.tcp_mode %}
    mode tcp
{% endif %}
{% endif %}
{% endfor %}

{% for backend in haproxy_backends %}
backend {{ backend.name }}
    balance {{ backend.balance|default('roundrobin') }}
{% for host in groups['all'] %}
{% if hostvars[host]['haproxy_backend'] is defined %}
{% if hostvars[host]['haproxy_backend'] == backend.name %}
    server      {{ host }} {{ hostvars[host][primary_nic|default('ansible_eth0')]['ipv4']['address'] }}:{{ hostvars[host]['haproxy_port']|default(haproxy_backend_port) }} check
{% endif %}
{% endif %}
{% endfor %}
{% if backend.tcp_mode is defined%}
{% if backend.tcp_mode %}
    mode tcp
{% endif %}
{% endif %}
{% if backend.servers is defined %}
{% for server in backend.servers %}
    server      {{ server.name }} {{ server.address|default(server.name) }}:{{ server.port|default(haproxy_backend_port) }} check
{% endfor %}
{% endif %}
{% endfor %}
